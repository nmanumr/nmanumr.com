---
import BaseLayout from "../../layouts/Base.astro";
import { getCollection, getEntry, render } from "astro:content";
import { Image } from "astro:assets";
import ProjectItem from "../../components/ProjectItem.astro";
import { compareByDate, df } from "../../utils";

export async function getStaticPaths() {
  let companies = await getCollection("companies", (p) => !p.data.draft);
  return companies.map((entity) => ({
    params: { companyId: entity.id },
  }));
}

const { companyId } = Astro.params;

const company = await getEntry("companies", companyId);
if (!company) {
  return Astro.rewrite("/404");
}

const { Content } = await render(company);

let companyProjects = await getCollection(
  "projects",
  (p) => p.data.company?.id === company?.id && !p.data.draft,
);
companyProjects = companyProjects.sort(compareByDate);
---

<BaseLayout>
  <section class="mt-20 lg:mt-28">
    <div class="flex gap-x-4">
      <Image
        class="mt-3 h-12 w-12 rounded"
        width="100"
        height="100"
        src={company.data.logo}
        alt={company.data.name}
      />
      <div>
        <div class="text-sm font-medium text-muted">
          {df.format(company.data.startDate)} -{" "}
          {company.data.endDate ? df.format(company.data.endDate) : "Now"}
        </div>
        <h1 class="font-recoleta text-3xl text-emphasis">
          {company.data.name}
        </h1>
        <div class="mt-1 font-medium text-emphasis">
          {company.data.title}
        </div>
        <div class="text-sm">
          {company.data.location}
        </div>
      </div>
    </div>

    <div class="prose mt-10">
      <Content />
    </div>
  </section>

  <section class="mt-16">
    <h2 class="font-recoleta text-2xl text-emphasis">Things Iâ€™ve built.</h2>

    <div class="mt-8 space-y-12">
      {
        companyProjects.map((project) => (
          <ProjectItem slug={project.slug} hideCompany />
        ))
      }
    </div>
  </section>

  <div class="pt-20 lg:pt-28"></div>
</BaseLayout>
